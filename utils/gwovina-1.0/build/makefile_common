LIBOBJ = cache.o coords.o current_weights.o everything.o grid.o szv_grid.o manifold.o model.o gwo.o gwo_mutate.o my_pid.o naive_non_cache.o non_cache.o parallel_gwo.o parse_pdbqt.o pdb.o quasi_newton.o quaternion.o random.o ssd.o terms.o weighted_terms.o rotamer.o
MAINOBJ = main.o
SPLITOBJ = split.o

INCFLAGS = -I $(BOOST_INCLUDE)

# -pedantic fails on Mac with Boost 1.41 (syntax problems in their headers)
#CC = ${GPP} ${C_PLATFORM} -ansi -pedantic -Wno-long-long ${C_OPTIONS} $(INCFLAGS)
CC = ${GPP} ${C_PLATFORM} -ansi -Wno-long-long ${C_OPTIONS} $(INCFLAGS)

LDFLAGS = -L$(BASE)/lib -L.

LIBS = -l boost_system${BOOST_LIB_VERSION} -l boost_thread${BOOST_LIB_VERSION} -l boost_program_options${BOOST_LIB_VERSION}#-l pthread

.SUFFIXES: .cpp .o

%.o : ../../../src/lib/%.cpp 
	$(CC) $(CFLAGS) -o $@ -c $< 

%.o : ../../../src/design/%.cpp 
	$(CC) $(CFLAGS) -I ../../../src/lib -o $@ -c $< 
	
%.o : ../../../src/main/%.cpp 
	$(CC) $(CFLAGS) -I ../../../src/lib -o $@ -c $< 

%.o : ../../../src/split/%.cpp 
	$(CC) $(CFLAGS) -I ../../../src/lib -o $@ -c $< 

all: gwovina gwovina_split

include dependencies

gwovina: $(MAINOBJ) $(LIBOBJ)
	$(CC) $(LDFLAGS) -o $@ $^ $(LIBS)

gwovina_split: $(SPLITOBJ)
	$(CC) $(LDFLAGS) -o $@ $^ $(LIBS)

clean:
	rm -f *.o

depend:
	ln -sf `${GPP} -print-file-name=libstdc++.a`
	rm -f dependencies_tmp dependencies_tmp.bak
	touch dependencies_tmp
	makedepend -f dependencies_tmp -Y -I ../../../src/lib ../../../src/lib/*.cpp ../../../src/tests/*.cpp ../../../src/design/*.cpp ../../../src/main/*.cpp ../../../src/split/*.cpp  ../../../src/tune/*.cpp
	sed -e "s/^\.\.\/\.\.\/\.\.\/src\/[a-z]*\//.\//" dependencies_tmp > dependencies
	rm -f dependencies_tmp dependencies_tmp.bak
